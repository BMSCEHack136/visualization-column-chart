{"ast":null,"code":"/**\n * Analyzes the chart type based on provided options.\n * @param options The chart options to analyze.\n * @returns An object indicating whether the chart is a bar chart or circular chart.\n */\nexport const analyzeChartType = options => {\n  var _options$chart, _options$series, _options$chart2;\n  const isBarChart = ((_options$chart = options.chart) === null || _options$chart === void 0 ? void 0 : _options$chart.type) === 'bar' || ((_options$series = options.series) === null || _options$series === void 0 ? void 0 : _options$series[0].type) === 'bar';\n  const isCircularChart = ((_options$chart2 = options.chart) === null || _options$chart2 === void 0 ? void 0 : _options$chart2.type) === 'pie';\n  return {\n    isBarChart,\n    isCircularChart\n  };\n};","map":{"version":3,"names":["analyzeChartType","options","_options$chart","_options$series","_options$chart2","isBarChart","chart","type","series","isCircularChart"],"sources":["/Users/satyamkumarjha/DEVREV/visualization/src/highcharts/utils/get-chart-type.ts"],"sourcesContent":["\n/**\n * Analyzes the chart type based on provided options.\n * @param options The chart options to analyze.\n * @returns An object indicating whether the chart is a bar chart or circular chart.\n */\nexport const analyzeChartType = (\n  options: any,\n): {\n  isBarChart: boolean;\n  isCircularChart: boolean;\n} => {\n  const isBarChart = options.chart?.type === 'bar' || options.series?.[0].type === 'bar';\n  const isCircularChart = options.chart?.type === 'pie';\n  return {\n    isBarChart,\n    isCircularChart,\n  };\n};\n"],"mappings":"AACA;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMA,gBAAgB,GAC3BC,OAAY,IAIT;EAAA,IAAAC,cAAA,EAAAC,eAAA,EAAAC,eAAA;EACH,MAAMC,UAAU,GAAG,EAAAH,cAAA,GAAAD,OAAO,CAACK,KAAK,cAAAJ,cAAA,uBAAbA,cAAA,CAAeK,IAAI,MAAK,KAAK,IAAI,EAAAJ,eAAA,GAAAF,OAAO,CAACO,MAAM,cAAAL,eAAA,uBAAdA,eAAA,CAAiB,CAAC,CAAC,CAACI,IAAI,MAAK,KAAK;EACtF,MAAME,eAAe,GAAG,EAAAL,eAAA,GAAAH,OAAO,CAACK,KAAK,cAAAF,eAAA,uBAAbA,eAAA,CAAeG,IAAI,MAAK,KAAK;EACrD,OAAO;IACLF,UAAU;IACVI;EACF,CAAC;AACH,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}