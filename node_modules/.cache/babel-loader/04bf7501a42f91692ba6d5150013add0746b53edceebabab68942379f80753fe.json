{"ast":null,"code":"var _jsxFileName = \"/Users/satyamkumarjha/DEVREV/visualization/src/highcharts/label-component.tsx\",\n  _s = $RefreshSig$();\nimport React, { Fragment, useEffect } from \"react\";\nimport { createPortal } from \"react-dom\";\nimport useMeasure from \"react-use/lib/useMeasure\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const LabelComponent = ({\n  tick,\n  className,\n  updateChartMargin,\n  tickRenderer\n}) => {\n  _s();\n  const [tickLabelRef, {\n    width,\n    height\n  }] = useMeasure();\n  useEffect(() => {\n    updateChartMargin && updateChartMargin();\n  }, [width, height]);\n  if (!tick || !tick.label || !tick.label.element) return null;\n\n  // delibrately added this as we can have name for axis when axis type is category but highcharts doesn't provide proper types\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  //@ts-ignore\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/createPortal( /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: tickLabelRef,\n      className: className,\n      children: tickRenderer({\n        tick\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this), tick.label.element)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_s(LabelComponent, \"cCY+ViwRGtuBJp4lTm4qeytaBBg=\", false, function () {\n  return [useMeasure];\n});\n_c = LabelComponent;\nvar _c;\n$RefreshReg$(_c, \"LabelComponent\");","map":{"version":3,"names":["React","Fragment","useEffect","createPortal","useMeasure","jsxDEV","_jsxDEV","LabelComponent","tick","className","updateChartMargin","tickRenderer","_s","tickLabelRef","width","height","label","element","children","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/satyamkumarjha/DEVREV/visualization/src/highcharts/label-component.tsx"],"sourcesContent":["import { Tick } from \"highcharts\";\nimport React, { Fragment, useEffect } from \"react\";\nimport { createPortal } from \"react-dom\";\nimport useMeasure from \"react-use/lib/useMeasure\";\n\nexport const LabelComponent = ({\n  tick,\n  className,\n  updateChartMargin,\n  tickRenderer,\n}: {\n  tick: Tick;\n  className?: string;\n  updateChartMargin?: () => void;\n  tickRenderer: (props: { tick: Tick; drid?: string }) => JSX.Element | null;\n}) => {\n  const [tickLabelRef, { width, height }] = useMeasure<HTMLDivElement>();\n\n  useEffect(() => {\n    updateChartMargin && updateChartMargin();\n  }, [width, height]);\n\n  if (!tick || !tick.label || !tick.label.element) return null;\n\n    // delibrately added this as we can have name for axis when axis type is category but highcharts doesn't provide proper types\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    //@ts-ignore\n   \n  return (\n    <Fragment>\n      {createPortal(\n        <div ref={tickLabelRef} className={className}>\n          {tickRenderer({ tick })}\n        </div>,\n        tick.label.element\n      )}\n    </Fragment>\n  );\n};\n"],"mappings":";;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,YAAY,QAAQ,WAAW;AACxC,OAAOC,UAAU,MAAM,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElD,OAAO,MAAMC,cAAc,GAAGA,CAAC;EAC7BC,IAAI;EACJC,SAAS;EACTC,iBAAiB;EACjBC;AAMF,CAAC,KAAK;EAAAC,EAAA;EACJ,MAAM,CAACC,YAAY,EAAE;IAAEC,KAAK;IAAEC;EAAO,CAAC,CAAC,GAAGX,UAAU,CAAiB,CAAC;EAEtEF,SAAS,CAAC,MAAM;IACdQ,iBAAiB,IAAIA,iBAAiB,CAAC,CAAC;EAC1C,CAAC,EAAE,CAACI,KAAK,EAAEC,MAAM,CAAC,CAAC;EAEnB,IAAI,CAACP,IAAI,IAAI,CAACA,IAAI,CAACQ,KAAK,IAAI,CAACR,IAAI,CAACQ,KAAK,CAACC,OAAO,EAAE,OAAO,IAAI;;EAE1D;EACA;EACA;;EAEF,oBACEX,OAAA,CAACL,QAAQ;IAAAiB,QAAA,eACNf,YAAY,eACXG,OAAA;MAAKa,GAAG,EAAEN,YAAa;MAACJ,SAAS,EAAEA,SAAU;MAAAS,QAAA,EAC1CP,YAAY,CAAC;QAAEH;MAAK,CAAC;IAAC;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpB,CAAC,EACNf,IAAI,CAACQ,KAAK,CAACC,OACb;EAAC;IAAAG,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACO,CAAC;AAEf,CAAC;AAACX,EAAA,CAjCWL,cAAc;EAAA,QAWiBH,UAAU;AAAA;AAAAoB,EAAA,GAXzCjB,cAAc;AAAA,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}