{"ast":null,"code":"var _jsxFileName = \"/Users/satyamkumarjha/DEVREV/visualization/src/highcharts/legend-components.tsx\",\n  _s = $RefreshSig$();\nimport clsx from 'clsx';\nimport React, { useCallback } from 'react';\nimport { isSeriesType } from './utils/is-series';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FULL_OPACITY = 1,\n  DIMMED_OPACITY = 0.4;\nexport const LegendComponent = ({\n  legendRenderer,\n  legend,\n  legendItems,\n  drid\n}) => {\n  _s();\n  const seriesType = isSeriesType(legend) ? legend.type : legend.series.type;\n  const blurOtherLegends = useCallback(() => legendItems.forEach(item => item !== legend && item.update({\n    opacity: DIMMED_OPACITY,\n    type: seriesType\n  })), [legendItems, legend, seriesType]);\n  const unBlurOtherLegends = useCallback(() => legendItems.forEach(item => item !== legend && item.update({\n    opacity: FULL_OPACITY,\n    type: seriesType\n  })), [legendItems, legend, seriesType]);\n  const handleMouseOver = useCallback(() => {\n    if (legend.visible) blurOtherLegends();\n  }, [blurOtherLegends, legend]);\n  const handleMouseOut = useCallback(() => unBlurOtherLegends(), [unBlurOtherLegends]);\n  const handleClick = useCallback(() => {\n    if (legend.visible) unBlurOtherLegends();else blurOtherLegends();\n    legend.setVisible(!legend.visible);\n  }, [blurOtherLegends, unBlurOtherLegends, legend]);\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    style: {\n      color: legend.color\n    },\n    className: clsx('flex flex-row items-center gap-2 !cursor-pointer max-w-full overflow-clip border px-2', legend.visible ? '' : 'opacity-50 line-through'),\n    onClick: handleClick,\n    onMouseOut: handleMouseOut,\n    onMouseOver: handleMouseOver,\n    children: legend.name\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n_s(LegendComponent, \"SkuL5y94Z06bBGodt86I+0t71Do=\");\n_c = LegendComponent;\nvar _c;\n$RefreshReg$(_c, \"LegendComponent\");","map":{"version":3,"names":["clsx","React","useCallback","isSeriesType","jsxDEV","_jsxDEV","FULL_OPACITY","DIMMED_OPACITY","LegendComponent","legendRenderer","legend","legendItems","drid","_s","seriesType","type","series","blurOtherLegends","forEach","item","update","opacity","unBlurOtherLegends","handleMouseOver","visible","handleMouseOut","handleClick","setVisible","style","color","className","onClick","onMouseOut","onMouseOver","children","name","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/satyamkumarjha/DEVREV/visualization/src/highcharts/legend-components.tsx"],"sourcesContent":["\nimport clsx from 'clsx';\nimport React, { useCallback } from 'react';\n\nimport { isSeriesType } from './utils/is-series';\nimport { Point, Series } from 'highcharts';\n\ninterface LegendItemProps {\n  legendRenderer: (props: { legend: Point | Series }) => JSX.Element | null;\n  legend: Point | Series;\n  legendItems: Array<Point | Series>;\n  drid?: string;\n}\n\nconst FULL_OPACITY = 1,\n  DIMMED_OPACITY = 0.4;\n\n\nexport const LegendComponent = ({ legendRenderer, legend, legendItems, drid }: LegendItemProps) => {\n  const seriesType = isSeriesType(legend) ? legend.type : legend.series.type;\n\n  const blurOtherLegends = useCallback(\n    () =>\n      legendItems.forEach(\n        (item) => item !== legend && item.update({ opacity: DIMMED_OPACITY, type: seriesType as any }),\n      ),\n    [legendItems, legend, seriesType],\n  );\n\n  const unBlurOtherLegends = useCallback(\n    () =>\n      legendItems.forEach(\n        (item) => item !== legend && item.update({ opacity: FULL_OPACITY, type: seriesType as any }),\n      ),\n    [legendItems, legend, seriesType],\n  );\n\n  const handleMouseOver = useCallback(() => {\n    if (legend.visible) blurOtherLegends();\n  }, [blurOtherLegends, legend]);\n\n  const handleMouseOut = useCallback(() => unBlurOtherLegends(), [unBlurOtherLegends]);\n\n  const handleClick = useCallback(() => {\n    if (legend.visible) unBlurOtherLegends();\n    else blurOtherLegends();\n\n    legend.setVisible(!legend.visible);\n  }, [blurOtherLegends, unBlurOtherLegends, legend]);\n\n  return (\n    <button\n    style={{\n      color:legend.color as string,\n    }}\n      className={clsx(\n        'flex flex-row items-center gap-2 !cursor-pointer max-w-full overflow-clip border px-2',\n        legend.visible ? '' : 'opacity-50 line-through',\n      )}\n      onClick={handleClick}\n      onMouseOut={handleMouseOut}\n      onMouseOver={handleMouseOver}\n    >\n{legend.name}\n    </button>\n  );\n};\n"],"mappings":";;AACA,OAAOA,IAAI,MAAM,MAAM;AACvB,OAAOC,KAAK,IAAIC,WAAW,QAAQ,OAAO;AAE1C,SAASC,YAAY,QAAQ,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAUjD,MAAMC,YAAY,GAAG,CAAC;EACpBC,cAAc,GAAG,GAAG;AAGtB,OAAO,MAAMC,eAAe,GAAGA,CAAC;EAAEC,cAAc;EAAEC,MAAM;EAAEC,WAAW;EAAEC;AAAsB,CAAC,KAAK;EAAAC,EAAA;EACjG,MAAMC,UAAU,GAAGX,YAAY,CAACO,MAAM,CAAC,GAAGA,MAAM,CAACK,IAAI,GAAGL,MAAM,CAACM,MAAM,CAACD,IAAI;EAE1E,MAAME,gBAAgB,GAAGf,WAAW,CAClC,MACES,WAAW,CAACO,OAAO,CAChBC,IAAI,IAAKA,IAAI,KAAKT,MAAM,IAAIS,IAAI,CAACC,MAAM,CAAC;IAAEC,OAAO,EAAEd,cAAc;IAAEQ,IAAI,EAAED;EAAkB,CAAC,CAC/F,CAAC,EACH,CAACH,WAAW,EAAED,MAAM,EAAEI,UAAU,CAClC,CAAC;EAED,MAAMQ,kBAAkB,GAAGpB,WAAW,CACpC,MACES,WAAW,CAACO,OAAO,CAChBC,IAAI,IAAKA,IAAI,KAAKT,MAAM,IAAIS,IAAI,CAACC,MAAM,CAAC;IAAEC,OAAO,EAAEf,YAAY;IAAES,IAAI,EAAED;EAAkB,CAAC,CAC7F,CAAC,EACH,CAACH,WAAW,EAAED,MAAM,EAAEI,UAAU,CAClC,CAAC;EAED,MAAMS,eAAe,GAAGrB,WAAW,CAAC,MAAM;IACxC,IAAIQ,MAAM,CAACc,OAAO,EAAEP,gBAAgB,CAAC,CAAC;EACxC,CAAC,EAAE,CAACA,gBAAgB,EAAEP,MAAM,CAAC,CAAC;EAE9B,MAAMe,cAAc,GAAGvB,WAAW,CAAC,MAAMoB,kBAAkB,CAAC,CAAC,EAAE,CAACA,kBAAkB,CAAC,CAAC;EAEpF,MAAMI,WAAW,GAAGxB,WAAW,CAAC,MAAM;IACpC,IAAIQ,MAAM,CAACc,OAAO,EAAEF,kBAAkB,CAAC,CAAC,CAAC,KACpCL,gBAAgB,CAAC,CAAC;IAEvBP,MAAM,CAACiB,UAAU,CAAC,CAACjB,MAAM,CAACc,OAAO,CAAC;EACpC,CAAC,EAAE,CAACP,gBAAgB,EAAEK,kBAAkB,EAAEZ,MAAM,CAAC,CAAC;EAElD,oBACEL,OAAA;IACAuB,KAAK,EAAE;MACLC,KAAK,EAACnB,MAAM,CAACmB;IACf,CAAE;IACAC,SAAS,EAAE9B,IAAI,CACb,uFAAuF,EACvFU,MAAM,CAACc,OAAO,GAAG,EAAE,GAAG,yBACxB,CAAE;IACFO,OAAO,EAAEL,WAAY;IACrBM,UAAU,EAAEP,cAAe;IAC3BQ,WAAW,EAAEV,eAAgB;IAAAW,QAAA,EAElCxB,MAAM,CAACyB;EAAI;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEb,CAAC;AAAC1B,EAAA,CAhDWL,eAAe;AAAAgC,EAAA,GAAfhC,eAAe;AAAA,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}